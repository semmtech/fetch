{"version":3,"sources":["utils/index.tsx","utils/styles.js","constants/index.js","components/ui/Login.component.tsx","reducers/index.tsx","index.tsx","components/App.component.tsx","img/Laces.png"],"names":["urlParams","URLSearchParams","window","location","search","feedbackMessage","param","text","has","data-testid","undefined","icon","cursor","color","minWidth","textAlign","useState","hidden","setHidden","password","setPassword","username","setUsername","login","useGlobal","showPassword","Container","src","Logo","alt","height","width","Title","LoginForm","Wrapper","id","fullWidth","autoFocus","value","onChange","e","target","type","placeholder","constants","InputProps","startAdornment","position","size","style","onKeyPress","event","key","endAdornment","data-tip","onClick","place","effect","backgroundColor","styled","div","form","h1","addReducer","global","userName","a","fetch","credentials","method","then","response","href","url","catch","err","error","ReactDOM","render","document","getElementById","module","exports"],"mappings":"qQAGMA,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAGzCC,EAAkB,SAACC,EAAeC,GAAhB,OAC7BP,EAAUQ,IAAIF,GACZ,0BAAMG,cAAY,mBAAmBF,QAErCG,GCTSC,EAAO,CAClBC,OAAQ,UACRC,MAAO,UACPC,SAAU,OACVC,UAAW,UCJE,EACH,WADG,EAEH,WAFG,EAGC,gBAHD,EAIC,gB,khBCSD,iBAAO,IAAD,EACSC,oBAAS,GADlB,mBACZC,EADY,KACJC,EADI,OAGaF,mBAAS,IAHtB,mBAGZG,EAHY,KAGFC,EAHE,OAIaJ,mBAAS,IAJtB,mBAIZK,EAJY,KAIFC,EAJE,KAKbC,EAAaC,oBAAU,SAEvBC,EAAe,WACnBP,GAAWD,IAGb,OACE,kBAACS,EAAD,KACE,yBAAKC,IAAKC,IAAMC,IAAI,aAAaC,OAAO,MAAMC,MAAM,QACpD,kBAACC,EAAD,oBACA,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CACEC,GAAG,WACHC,WAAW,EACXC,WAAW,EACXC,MAAOjB,EACPkB,SAAU,SAAAC,GAAC,OAAIlB,EAAYkB,EAAEC,OAAOH,QACpCI,KAAK,OACLC,YAAaC,EACbC,WAAY,CACVC,eACE,kBAAC,IAAD,CAAgBC,SAAS,SACvB,kBAAC,IAAD,CACEC,KAAM,GACNC,MAAO,CACLpC,MAAO,kBAQrB,kBAACqB,EAAD,KACE,kBAAC,IAAD,CACEC,GAAG,WACHC,WAAW,EACXM,KAAMzB,EAAS,WAAa,OAC5B0B,YAAaC,EACbL,SAAU,SAAAC,GAAC,OAAIpB,EAAYoB,EAAEC,OAAOH,QACpCY,WAAY,SAAAC,GACQ,UAAdA,EAAMC,KACR7B,EAAMF,EAAUF,IAGpBmB,MAAOnB,EACP0B,WAAY,CACVQ,aACE,kBAAC,IAAD,CAAgBN,SAAS,OACtB9B,EACC,kBAAC,IAAD,CACEqC,WAAUV,EACVW,QAAS9B,EACTuB,KAAM,GACNC,MAAOtC,IAGT,kBAAC,IAAD,CACE2C,WAAUV,EACVW,QAAS9B,EACTuB,KAAM,GACNC,MAAOtC,KAKfmC,eACE,kBAAC,IAAD,CAAgBC,SAAS,SACvB,kBAAC,IAAD,CACEC,KAAM,GACNC,MAAO,CACLpC,MAAO,iBAOnB,kBAAC,IAAD,CAAc2C,MAAM,QAAQd,KAAK,OAAOe,OAAO,WAEjD,kBAACvB,EAAD,KACE,kBAAC,IAAD,CACEzB,cAAY,cACZ2B,WAAW,EACXa,MAAO,CACLS,gBAAiB,UACjB7C,MAAO,WAET0C,QAAS,kBAAYhC,EAAMF,EAAUF,KAPvC,WAaHd,EACC,SACA,oFAEDA,EAAgB,QAAS,gDAK1BqB,EAAYiC,IAAOC,IAAV,KAOT3B,EAAY0B,IAAOE,KAAV,KAMT3B,EAAUyB,IAAOC,IAAV,KAOP5B,EAAQ2B,IAAOG,GAAV,K,yBC5IXC,qBAAW,QAAD,uCAAU,WAAOC,EAAQC,EAAkB9C,GAAjC,SAAA+C,EAAA,+EAClBC,MAAM,0BAAD,OAA2BF,EAA3B,qBAAgD9C,GAAY,CAC/DiD,YAAa,UACbC,OAAQ,SAEPC,MAAK,SAAAC,GAAQ,OAAKrE,OAAOC,SAASqE,KAAOD,EAASE,OAClDC,OAAM,SAACC,GAAD,MAAiB,CAAEC,MAAOD,OANjB,2CAAV,2DCEVE,IAASC,OAAO,mBCDD,kBAAM,kBAAC,EAAD,QDCL,MAASC,SAASC,eAAe,U,mBELjDC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.190389cc.chunk.js","sourcesContent":["import React from 'react';\n\n// This is for getting the parameters of the URL\nconst urlParams = new URLSearchParams(window.location.search);\n\n// This is for giving a feedback message (logged out and login with error)\nexport const feedbackMessage = (param: string, text: string) =>\n  urlParams.has(param) ? (\n    <span data-testid=\"feedbackMessage\">{text}</span>\n  ) : (\n    undefined\n  );\n","// helper object for style of icons in the input fields\nexport const icon = {\n  cursor: 'pointer',\n  color: '#4C4C4C',\n  minWidth: '50px',\n  textAlign: 'center'\n};\n","// These are constants that can be uses everywhere in the frontend -> so there only needs to be a change in here\nexport default {\n  username: 'Username',\n  password: 'Password',\n  showPassword: 'Show password',\n  hidePassword: 'Hide password'\n};\n","import { useGlobal } from 'reactn';\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport ReactTooltip from 'react-tooltip';\nimport { FaUser, FaKey, FaEye, FaEyeSlash } from 'react-icons/fa';\nimport Button from '@material-ui/core/Button';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\n\nimport Logo from '../../img/Laces.png';\nimport { feedbackMessage } from '../../utils';\nimport { icon } from '../../utils/styles';\nimport constants from '../../constants';\n\nexport default () => {\n  const [hidden, setHidden] = useState(true);\n\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const login: any = useGlobal('login');\n\n  const showPassword = () => {\n    setHidden(!hidden);\n  };\n\n  return (\n    <Container>\n      <img src={Logo} alt=\"Laces logo\" height=\"250\" width=\"250\" />\n      <Title>Laces Fetch</Title>\n      <LoginForm>\n        <Wrapper>\n          <TextField\n            id=\"userName\"\n            fullWidth={true}\n            autoFocus={true}\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            type=\"text\"\n            placeholder={constants.username}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <FaUser\n                    size={25}\n                    style={{\n                      color: '#4c4c4c'\n                    }}\n                  />\n                </InputAdornment>\n              )\n            }}\n          />\n        </Wrapper>\n        <Wrapper>\n          <TextField\n            id=\"password\"\n            fullWidth={true}\n            type={hidden ? 'password' : 'text'}\n            placeholder={constants.password}\n            onChange={e => setPassword(e.target.value)}\n            onKeyPress={event => {\n              if (event.key === 'Enter') {\n                login(username, password);\n              }\n            }}\n            value={password}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  {hidden ? (\n                    <FaEye\n                      data-tip={constants.showPassword}\n                      onClick={showPassword}\n                      size={25}\n                      style={icon as React.CSSProperties}\n                    />\n                  ) : (\n                    <FaEyeSlash\n                      data-tip={constants.hidePassword}\n                      onClick={showPassword}\n                      size={25}\n                      style={icon as React.CSSProperties}\n                    />\n                  )}\n                </InputAdornment>\n              ),\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <FaKey\n                    size={25}\n                    style={{\n                      color: '#4c4c4c'\n                    }}\n                  />\n                </InputAdornment>\n              )\n            }}\n          />\n          <ReactTooltip place=\"right\" type=\"dark\" effect=\"float\" />\n        </Wrapper>\n        <Wrapper>\n          <Button\n            data-testid=\"LoginButton\"\n            fullWidth={true}\n            style={{\n              backgroundColor: '#F6E524',\n              color: '#4c4c4c'\n            }}\n            onClick={(): void => login(username, password)}\n          >\n            Login\n          </Button>\n        </Wrapper>\n      </LoginForm>\n      {feedbackMessage(\n        'logout',\n        'You have been logged out, please login again if you want to use the application.'\n      )}\n      {feedbackMessage('error', 'Login was unsuccessfull, please try again.')}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  margin: 10px;\n  font-size: 20px;\n  display: flex;\n`;\n\nconst Title = styled.h1`\n  color: #4c4c4c;\n`;\n","import { addReducer } from 'reactn';\n\n// TODO: add encyption for sending the username and password with an basic authorization header\naddReducer('login', async (global, userName: string, password: string) =>\n  fetch(`/authenticate?username=${userName}&password=${password}`, {\n    credentials: 'include',\n    method: 'POST'\n  })\n    .then(response => (window.location.href = response.url))\n    .catch((err: Error) => ({ error: err }))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.component';\nimport './reducers';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\n\nimport Login from '../components/ui/Login.component';\n\nexport default () => <Login />;\n","module.exports = __webpack_public_path__ + \"static/media/Laces.fcddcf17.png\";"],"sourceRoot":""}