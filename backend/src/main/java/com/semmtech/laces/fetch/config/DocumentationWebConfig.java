package com.semmtech.laces.fetch.config;

import lombok.extern.slf4j.Slf4j;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

import java.io.File;
import java.net.URISyntaxException;
import java.net.URL;

/**
 * @author Mike Henrichs
 *
 */
@Configuration
@Slf4j
public class DocumentationWebConfig implements WebMvcConfigurer {

    @Override
    public void addViewControllers(ViewControllerRegistry registry) {
        registry.addViewController("/").setViewName("redirect:/admin/index.html");
        registry.addViewController("/admin/").setViewName("redirect:/admin/index.html");
        registry.addViewController("/add-on/").setViewName("redirect:/add-on/index.html");

        addDocumentationViewControllers(registry);
    }

    /**
     * Since documentation generated by MkDocs expects the server to automatically redirect users to the index.html
     * in a folder, generated links on pages only refer to the directory and not explicitly to the index.html within
     * this directory.
     *
     * This method traverses any static resources located in the folder 'documentation' and adds explicit view
     * controllers for any directories which have an 'index.html'.
     *
     * NOTE: This is no longer used at this time, as documentation is separate now
     *
     * @param registry
     */
    private void addDocumentationViewControllers(ViewControllerRegistry registry) {
        try {
            URL url = getClass().getResource("/static/documentation/");
            if (url == null) {
                return;
            }
            File directory = new File(url.toURI());
            if (directory.isDirectory()) {
                handleDirectory(directory, "/documentation", registry);
            }
        } catch (URISyntaxException e) {
            log.error("URISyntaxException thrown", e);
        }
    }

    private void handleDirectory(File directory, String path, ViewControllerRegistry registry) {
        for (File file : directory.listFiles()) {
            if ("index.html".equalsIgnoreCase(file.getName())) {
                String urlPath = String.format("%s/", path);
                String viewName = String.format("redirect:%s/index.html", path);
                log.info("Adding view controller: {} -> {}", urlPath, viewName);
                registry.addViewController(urlPath).setViewName(viewName);
            }
            else if (file.isDirectory()) {
                handleDirectory(file, String.format("%s/%s", path, file.getName()),registry);
            }
        }
    }
}
